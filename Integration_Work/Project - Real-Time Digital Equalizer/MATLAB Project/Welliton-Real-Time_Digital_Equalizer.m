
%  VARIÁVEIS IMPORTANTES
FS = 48000;                                                                 %Frequência de Amostragem 
SPF = 1024;                                                                 %Quantidade de Amostras por Frame

setpref('dsp', 'portaudioHostApi', 3);                                      %Setando o Dispositivo/Interface de Áudio como Padrão
setpref('midi','Minilab','Arturia MiniLab mkII');                           %Setando Controladora MIDI como Padrão

%       - REALTEK AUDIO [Microfone/Auto-Falantes Noteboook]
%deviceReader = audioDeviceReader();
%deviceWriter = audioDeviceWriter('SampleRate',deviceReader.SampleRate);

%       - ASIO  [Interface de Áudio Utilizada: BEHRINGER U-PHORIA UMC22]
%asiosettings                                                               %Abre a interface de configurações do driver

%   CONFIGURANDO DISPOSITIVOS DE ENTRADA, SAÍDA E GRAVAÇÃO EM ARQUIVO

deviceReader = audioDeviceReader(...                                         %Função de leitura de um Dispositivo
    'Driver', 'ASIO',...
    'Device', 'ASIO4ALL v2',...  
    'NumChannels', 2,...
    'BitDepth','32-bit float',...
    'SamplesPerFrame',SPF,...
    'ChannelMapping','[2:MaximumInputChannels]',...
    'SampleRate', FS);

%'ChannelMappingSource','Auto',...

deviceWriter = audioDeviceWriter(...                                        %Função de escrita em um Dispositivo
    'Driver', 'ASIO',...
    'Device', 'ASIO4ALL v2',...
    'BitDepth','32-bit float',...
    'BufferSize', 1024,...
    'ChannelMapping','[2:MaximumOutputChannels]',...
    'SampleRate', FS);

fileWriter1 = dsp.AudioFileWriter(...                                       %Função de escrita em um arquivo de áudio
    'Filename', 'Audio_Original.wav',...
    'FileFormat', 'WAV',...
    'DataType', 'int32',...
    'Compressor', 'None (uncompressed)',...
    'SampleRate', FS);

fileWriter2 = dsp.AudioFileWriter(...                                       %Função de escrita em um arquivo de áudio
    'Filename', 'Audio_Equalizado.wav',...
    'FileFormat', 'WAV',...
    'DataType', 'int32',...
    'Compressor', 'None (uncompressed)',...
    'SampleRate', FS);

%   COLETA E EXIBIÇÃO DE INFORMAÇÕES SOBRE DISPOSITIVOS E DRIVERS UTILIZADOS

disp('Informações Sobre os Dispositivos:')
getAudioDevices(deviceReader)
getAudioDevices(deviceWriter)
info(deviceReader)
info(deviceWriter)

%   VIZUALIZAÇÃO E REPRESENTAÇÃO DOS SINAIS DE ÁUDIO NO DOMÍNIO DA FREQUÊNCIA (ESPECTRO SONORO)

SpectrumScope = dsp.SpectrumAnalyzer(...
    'SampleRate',FS,...
    'NumInputPorts',2,...
    'ViewType','Spectrum',...
    'PlotAsTwoSidedSpectrum',false,...
    'FrequencySpan','Full',...
    'FrequencyScale','Log',...
    'ChannelNames',{'Microphone','Instrument',...
    'Filtered Microphone', 'Filtered Instrument'},...
    'ShowLegend',true);
show(SpectrumScope);

%   SPECTRAL ESTIMATION
FrameSize = 420;
numAvgs = 24;

%[APROXIMAÇÕES]
%"Rectangular"  "Chebyshev" "Flat Top"	"Hamming"
%"Hann"  "Kaiser"    "Blackman-Harris"

HannEstimator = dsp.SpectrumEstimator(...
    'PowerUnits','dBm',...
    'Window','Hann',...
    'FrequencyRange','onesided',...
    'SpectralAverages',numAvgs,...
    'SampleRate',FS);

FilterBankEstimator = dsp.SpectrumEstimator(...
    'PowerUnits','dBm',...
    'Method','Filter bank',...
    'FrequencyRange','onesided',...
    'SpectralAverages',numAvgs,...
    'SampleRate',FS);

SpectrumPlotter = dsp.SpectrumAnalyzer(...
    'Name','Spectrum Analyser With Spectral Estimation',...
    'InputDomain','Frequency',...
    'SampleRate',FS/FrameSize,...
    'SpectrumUnits','dBm',...
    'YLimits',[-120,40],...
    'PlotAsTwoSidedSpectrum',false,...
    'FrequencySpan','Full',...
    'FrequencyScale','Log',...
    'ChannelNames',{...
    'Filtered Microphone w/ Hann Window',...
    'Filtered Instrument w/ Hann Window',...
    'Filtered Microphone w/ Filter Bank',...
    'Filtered Instrument w/ Filter Bank'},...
    'ShowLegend',true);
show(SpectrumPlotter);

%   VIZUALIZAÇÃO E REPRESENTAÇÃO DOS SINAIS DE ÁUDIO NO DOMINIO DO TEMPO

TimeScope = dsp.TimeScope(...
    'NumInputPorts',2,...                                                   
    'SampleRate',FS,...                                                     
    'TimeSpan',1,...
    'TimeSpanOverrunAction','Wrap',...
    'AxesScaling','Auto',...
    'ChannelNames',{'Microphone','Instrument',...
    'Filtered Microphone', 'Filtered Instrument'},...
    'ShowLegend',true);
show(TimeScope);                                                            

%   EQUALIZADOR DIGITAL DE ÁUDIO E SUA RESPOSTA EM FREQUÊNCIA (MAGNITUDE)
%   DETALHES:
%   - 3 BELL/NOTCH FILTERS
%   - 1 HIGH PASS FILTER
%   - 1 LOW PASS FILTER
%   - 1 HIGH SHELF FILTER
%   - 1 LOW SHELF FILTER

EQ = multibandParametricEQ(...
    'NumEQBands',3,...
    'EQOrder',4,...
    'PeakGains',[12,-6,-12],...
    'QualityFactors',[20,2,10],...
    'Frequencies',[1000,5000,8000],...
    'HasLowpassFilter',true,...
    'LowpassCutoff',10000,...
    'LowpassSlope',48,...
    'HasHighpassFilter',true,...
    'HighpassCutoff',500,...
    'HighpassSlope',48,...
    'HasLowShelfFilter',true,...
    'LowShelfCutoff',600,...
    'LowShelfSlope',1,...
    'LowShelfGain',6,...
    'HasHighShelfFilter',true,...
    'HighShelfCutoff',9000,...
    'HighShelfSlope',1,...
    'HighShelfGain',-6,...
    'SampleRate',FS)
visualize(EQ)                                                               %Visualizador de Filtros Dinâmico
audioTestBench(EQ);                                                         %Interface Gráfica

%validateAudioPlugin -keeptestbench EQ
%generateAudioPlugin EQ;
%disp('Plugin Gerado');

%   CONFIGURAÇÕES  E ROTEAMENTO DA CONTROLADORA MIDI

%Minilab = mididevice('Input','Arturia MiniLab mkII')                        %
%[controlNumber, deviceName] = midiid;
%MIDIControls = midicontrols();
%midisync(MIDIControls)  

%configureMIDI(EQ)
%setupMIDIControls(EQ)

%configureMIDI(EQ,'HighpassCutoff',1074,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'HighpassSlope',1018,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'LowShelfCutoff',1076,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'LowShelfGain',1077,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'Frequencies1',1093,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'PeakGains1',1091,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'Frequencies2',1073,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'PeakGains2',1079,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'Frequencies3',1075,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'PeakGains3',1072,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'HighShelfCutoff',1077,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'HighShelfGain',1017,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'LowpassCutoff',1071,'DeviceName','Arturia MiniLab mkII');
%configureMIDI(EQ,'LowpassSlope',1019,'DeviceName','Arturia MiniLab mkII');

%   LOOP DE INSTRUÇÕES EM TEMPO REAL

disp('Iniciando Captura do Sinal')
tic
while toc < 300                                          %Tempo de Captura do sinal de Entrada
    InputSignal = deviceReader();
    process = @(x) x.*5; 
    
    EqualizedSignal = EQ(InputSignal);
    %midiread(MIDIControls)
    
    Hann = HannEstimator(EqualizedSignal);
    FBA = FilterBankEstimator(EqualizedSignal);
    
    TimeScope(InputSignal, EqualizedSignal);
    SpectrumScope(InputSignal, EqualizedSignal);
    SpectrumPlotter([Hann,FBA]);
    
    deviceWriter(EqualizedSignal);
    fileWriter1(InputSignal);
    fileWriter2(EqualizedSignal);                                           % Grava o sinal em um Arquivo
    drawnow limitrate
end

%loudness = integratedLoudness(EqualizedSignal,SPF);

disp('Finalizando Captura do Sinal')

disp('Áudios Gravados em Arquivos.')

%   ESCONDENDO AS INTERFACES

hide(SpectrumScope)
hide(TimeScope)

%   LIMPANDO A MEMÓRIA DOS OBJETOS 

%disconnectMIDI(EQ)
release(SpectrumScope)
release(TimeScope)
release(EQ)
release(deviceReader)
release(deviceWriter)
release(fileWriter1)
release(fileWriter2)